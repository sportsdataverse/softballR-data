home_team_display_name = "Home",
away_team_logo = "",
away_team_display_name = "Away",
score = "Score",
rank_diff = "Raw RPI Diff.",
log_rank_diff = "Logarithmic RPI Diff.") %>%
tab_style(cell_borders(sides = "right",
style = "dashed",
color = "lightgrey"),
cells_body(columns = c(home_team_display_name, away_team_display_name),
rows = everything())) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(home_team_display_name, home_team_logo),
rows = home_team_runs > away_team_runs
)) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(away_team_display_name, away_team_logo),
rows = home_team_runs < away_team_runs
)) %>%
gt_theme_espn() %>%
tab_header(title = "Biggest NCAA Softball Upsets",
subtitle = paste0(format(start_date, "%m/%d")," - ",format(end_date, "%m/%d"))) %>%
opt_align_table_header(align = "center") %>%
tab_options(heading.title.font.weight = "bold",
heading.title.font.size = "24px")
table <- scoreboard_test %>%
arrange(desc(abs(resid))) %>%
head(n = 5) %>%
select(game_date,home_team_logo, home_team_display_name, away_team_logo, away_team_display_name, home_team_runs, away_team_runs, score, rank_diff, log_rank_diff) %>%
gt() %>%
fmt_date(game_date, date_style = "Md") %>%
cols_hide(c(home_team_runs,away_team_runs)) %>%
fmt_number(log_rank_diff, decimals = 2) %>%
gt_img_rows(home_team_logo) %>%
gt_img_rows(away_team_logo) %>%
cols_label(game_date = "Date",
home_team_logo = "",
home_team_display_name = "Home",
away_team_logo = "",
away_team_display_name = "Away",
score = "Score",
rank_diff = "Raw RPI Diff.",
log_rank_diff = "Logarithmic RPI Diff.") %>%
tab_style(cell_borders(sides = "right",
style = "dashed",
color = "lightgrey"),
cells_body(columns = c(home_team_display_name, away_team_display_name),
rows = everything())) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(home_team_display_name, home_team_logo),
rows = home_team_runs > away_team_runs
)) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(away_team_display_name, away_team_logo),
rows = home_team_runs < away_team_runs
)) %>%
gt_theme_espn() %>%
tab_header(title = "Biggest NCAA Softball Upsets",
subtitle = paste0(format(start_date, "%m/%d")," - ",format(end_date, "%m/%d"))) %>%
opt_align_table_header(align = "center") %>%
tab_options(heading.title.font.weight = "bold",
heading.title.font.size = "24px")
table
gtsave(table, "Biggest Upsets.png")
table
gtsave(table, "Biggest Upsets.png")
library(tidyverse)
library(gt)
library(gtExtras)
setwd("~/Desktop/ncsu_softball/Data/2023/Yakkertech")
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE)
library(tidyverse)
library(gt)
library(gtExtras)
setwd("~/Desktop/ncsu_softball/Data/2023/Yakkertech")
files <- list.files() %>% as.data.frame() %>% filter(str_detect(`.`, "ETSU|Penn|James Madison")) %>% pull(`.`)
data <- rbind(read_csv(files)) %>%
filter(BatterTeam == "North carolina state")
unique(data$Batter)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE)
library(tidyverse)
library(gt)
library(gtExtras)
setwd("~/Desktop/ncsu_softball/Data/2023/Yakkertech")
files <- list.files() %>% as.data.frame() %>% filter(str_detect(`.`, "ETSU|Penn|JMU")) %>% pull(`.`)
data <- rbind(read_csv(files)) %>%
filter(BatterTeam == "North carolina state")
unique(data$Batter)
unique(data$Batter) %>% strsplit(" ")
unique(data$Batter) %>% strsplit(" ") %>% as.data.frame()
unique(data$Batter) %>% strsplit(" ") %>% rbind()
unique(data$Batter) %>% strsplit(" ")
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind)
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.)
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% sort(,2)
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% as.data.frame()
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% as.data.frame() %>% arrange(V2)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE)
library(tidyverse)
library(gt)
library(gtExtras)
setwd("~/Desktop/ncsu_softball/Data/2023/Yakkertech")
files <- list.files() %>% as.data.frame() %>% filter(str_detect(`.`, "ETSU|Penn|JMU")) %>% pull(`.`)
data <- rbind(read_csv(files)) %>%
filter(BatterTeam == "North carolina state")
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% as.data.frame() %>% arrange(V2)
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% as.data.frame() %>% arrange(V2)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE)
library(tidyverse)
library(gt)
library(gtExtras)
setwd("~/Desktop/ncsu_softball/Data/2023/Yakkertech")
files <- list.files() %>% as.data.frame() %>% filter(str_detect(`.`, "ETSU|Penn|JMU")) %>% pull(`.`)
data <- rbind(read_csv(files)) %>%
filter(BatterTeam == "North carolina state")
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% as.data.frame() %>% arrange(V2)
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% as.data.frame() %>% arrange(V2)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE)
library(tidyverse)
library(gt)
library(gtExtras)
setwd("~/Desktop/ncsu_softball/Data/2023/Yakkertech")
files <- list.files() %>% as.data.frame() %>% filter(str_detect(`.`, "ETSU|Penn|JMU")) %>% pull(`.`)
data <- rbind(read_csv(files)) %>%
filter(BatterTeam == "North carolina state")
unique(data$Batter) %>% strsplit(" ") %>% do.call(rbind,.) %>% as.data.frame() %>% arrange(V2)
#Create Strike Zone
topKzone <- 11/3
botKzone <- 11/6
leftKzone <- -17/24
rightKzone <- 17/24
kZone = data.frame(
x = c(leftKzone, leftKzone, rightKzone, rightKzone, leftKzone)
, y = c(botKzone, topKzone, topKzone, botKzone, botKzone)
)
centtopKzone <- 77/24
centbotKzone <- 55/24
centleftKzone <- -17/48
centrightKzone <- 17/48
centkZone = data.frame(
x = c(centleftKzone, centleftKzone, centrightKzone, centrightKzone, centleftKzone)
, y = c(centbotKzone, centtopKzone, centtopKzone, centbotKzone, centbotKzone)
)
right_batterbox <- 29/24
left_batterbox <- -29/24
create_plot <- function(df,label){
plot <- ggplot(df,aes(x=PlateLocSide,y=PlateLocHeight)) +
geom_point() +
geom_path(aes(x,y),data = kZone) +
geom_path(aes(x,y),data = centkZone) +
geom_vline(xintercept = c(right_batterbox,left_batterbox), linetype = 'dashed') +
xlim(-2,2) +
ylim(0,5) +
theme_void() +
labs(title = label) +
theme(legend.position = 'none',
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(color = "grey", size = 2))
return(plot)
}
atbat_results <- data %>%
group_by(Date,Inning,PAofInning,Batter,Pitcher) %>%
summarise(pitchcall = last(PitchCall),
korbb = last(KorBB),
result = last(PlayResult)) %>%
ungroup() %>%
mutate(bases = case_when(pitchcall == "HitByPitch" | korbb == "Walk" | result == "Single" ~ 1,
result == "Double" ~ 2,
result == "Triple" ~ 3,
result == "HomeRun" ~ 4,
TRUE ~ 0))
batted_ball_stats <- data %>%
group_by(Batter) %>%
summarise(chase_rate = sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone) &
PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip"), na.rm = T) /
sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone), na.rm = T),
contact_rate = sum(PitchCall %in% c("Foul","InPlay") /
sum((PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip")))),
barrel_rate = sum(ExitSpeed >= 65 & PitchCall == "InPlay", na.rm = T) / sum(PitchCall == "InPlay", na.rm = T),
avg_exit_velo = mean(ExitSpeed,na.rm = T))
batter_stats <- atbat_results %>%
group_by(Batter) %>%
summarise(PA = n(),
AB = PA - sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
H = sum(result %in% c("Single","Double","Triple","HomeRun"), na.rm  = T),
HR = sum(result == "HomeRun",na.rm=T),
BB = sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
OBP = (H + BB) / PA,
BA = sum(result %in% c("Single","Double","Triple","HomeRun")) / AB,
SLG = sum(bases) / PA,
OPS = OBP + SLG,
K = sum(korbb == "Strikeout", na.rm = T),
RC = (sum(bases) * (H + BB)) / (PA),
RC_per_PA = RC / PA) %>%
ungroup() %>%
merge(batted_ball_stats) %>%
mutate(barrel_rate = ifelse(is.nan(barrel_rate),0,barrel_rate)) %>%
select(Batter, BA, OBP, SLG, OPS, RC, RC_per_PA, chase_rate, contact_rate, barrel_rate, avg_exit_velo, PA, AB, H, HR, K, BB)
create_stats <- function(batter){
batter_stats %>%
filter(Batter == batter) %>%
select(-c(Batter,RC_per_PA)) %>%
gt() %>%
fmt_number(1:8, decimals = 3) %>%
fmt_number(9, decimals = 1) %>%
cols_label(chase_rate = "Chase Rate",
contact_rate = "Contact Rate",
barrel_rate = "Barrel Rate",
avg_exit_velo = "Avg. Exit Velo") %>%
tab_style(cell_borders(sides = "right"),
locations =
list(cells_body(
columns = avg_exit_velo,
rows = everything()),
cells_column_labels(
columns = avg_exit_velo
))) %>%
data_color(
columns = BA,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$BA),max(batter_stats$BA)))
) %>%
data_color(
columns = OBP,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$OBP),max(batter_stats$OBP)))
) %>%
data_color(
columns = SLG,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$SLG),max(batter_stats$SLG)))
) %>%
data_color(
columns = OPS,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$OPS),max(batter_stats$OPS)))
) %>%
data_color(
columns = RC,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$RC),max(batter_stats$RC)))
) %>%
data_color(
columns = chase_rate,
colors = scales::col_numeric(
palette = c(
"#63be7b", "#ffeb84", "#f8696b"),
domain = c(min(batter_stats$chase_rate),max(batter_stats$chase_rate)))
) %>%
data_color(
columns = contact_rate,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$contact_rate),max(batter_stats$contact_rate)))
) %>%
data_color(
columns = barrel_rate,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$barrel_rate),max(batter_stats$barrel_rate)))
)%>%
data_color(
columns = avg_exit_velo,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$avg_exit_velo),max(batter_stats$avg_exit_velo)))
)
}
View(batter_stats)
batted_ball_stats <- data %>%
group_by(Batter) %>%
summarise(chase_rate = sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone) &
PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip"), na.rm = T) /
sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone), na.rm = T),
contact_rate = sum(PitchCall %in% c("Foul","InPlay") /
sum((PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip")))),
barrel_rate = sum(ExitSpeed >= 65 & PitchCall == "InPlay", na.rm = T) / sum(PitchCall == "InPlay", na.rm = T),
avg_exit_velo = mean(ExitSpeed[which(PitchCall == "PlayResult")],na.rm = T))
atbat_results <- data %>%
group_by(Date,Inning,PAofInning,Batter,Pitcher) %>%
summarise(pitchcall = last(PitchCall),
korbb = last(KorBB),
result = last(PlayResult)) %>%
ungroup() %>%
mutate(bases = case_when(pitchcall == "HitByPitch" | korbb == "Walk" | result == "Single" ~ 1,
result == "Double" ~ 2,
result == "Triple" ~ 3,
result == "HomeRun" ~ 4,
TRUE ~ 0))
batted_ball_stats <- data %>%
group_by(Batter) %>%
summarise(chase_rate = sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone) &
PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip"), na.rm = T) /
sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone), na.rm = T),
contact_rate = sum(PitchCall %in% c("Foul","InPlay") /
sum((PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip")))),
barrel_rate = sum(ExitSpeed >= 65 & PitchCall == "InPlay", na.rm = T) / sum(PitchCall == "InPlay", na.rm = T),
avg_exit_velo = mean(ExitSpeed[which(PitchCall == "PlayResult")],na.rm = T))
batter_stats <- atbat_results %>%
group_by(Batter) %>%
summarise(PA = n(),
AB = PA - sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
H = sum(result %in% c("Single","Double","Triple","HomeRun"), na.rm  = T),
HR = sum(result == "HomeRun",na.rm=T),
BB = sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
OBP = (H + BB) / PA,
BA = sum(result %in% c("Single","Double","Triple","HomeRun")) / AB,
SLG = sum(bases) / PA,
OPS = OBP + SLG,
K = sum(korbb == "Strikeout", na.rm = T),
RC = (sum(bases) * (H + BB)) / (PA),
RC_per_PA = RC / PA) %>%
ungroup() %>%
merge(batted_ball_stats) %>%
mutate(barrel_rate = ifelse(is.nan(barrel_rate),0,barrel_rate)) %>%
select(Batter, BA, OBP, SLG, OPS, RC, RC_per_PA, chase_rate, contact_rate, barrel_rate, avg_exit_velo, PA, AB, H, HR, K, BB)
create_stats <- function(batter){
batter_stats %>%
filter(Batter == batter) %>%
select(-c(Batter,RC_per_PA)) %>%
gt() %>%
fmt_number(1:8, decimals = 3) %>%
fmt_number(9, decimals = 1) %>%
cols_label(chase_rate = "Chase Rate",
contact_rate = "Contact Rate",
barrel_rate = "Barrel Rate",
avg_exit_velo = "Avg. Exit Velo") %>%
tab_style(cell_borders(sides = "right"),
locations =
list(cells_body(
columns = avg_exit_velo,
rows = everything()),
cells_column_labels(
columns = avg_exit_velo
))) %>%
data_color(
columns = BA,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$BA),max(batter_stats$BA)))
) %>%
data_color(
columns = OBP,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$OBP),max(batter_stats$OBP)))
) %>%
data_color(
columns = SLG,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$SLG),max(batter_stats$SLG)))
) %>%
data_color(
columns = OPS,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$OPS),max(batter_stats$OPS)))
) %>%
data_color(
columns = RC,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$RC),max(batter_stats$RC)))
) %>%
data_color(
columns = chase_rate,
colors = scales::col_numeric(
palette = c(
"#63be7b", "#ffeb84", "#f8696b"),
domain = c(min(batter_stats$chase_rate),max(batter_stats$chase_rate)))
) %>%
data_color(
columns = contact_rate,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$contact_rate),max(batter_stats$contact_rate)))
) %>%
data_color(
columns = barrel_rate,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$barrel_rate),max(batter_stats$barrel_rate)))
)%>%
data_color(
columns = avg_exit_velo,
colors = scales::col_numeric(
palette = c(
"#f8696b", "#ffeb84", "#63be7b"),
domain = c(min(batter_stats$avg_exit_velo),max(batter_stats$avg_exit_velo)))
)
}
View(batter_stats)
unique(data$PitchCall)
batted_ball_stats <- data %>%
group_by(Batter) %>%
summarise(chase_rate = sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone) &
PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip"), na.rm = T) /
sum((PlateLocSide > rightKzone | PlateLocSide < leftKzone |
PlateLocHeight > topKzone | PlateLocHeight < botKzone), na.rm = T),
contact_rate = sum(PitchCall %in% c("Foul","InPlay") /
sum((PitchCall %in% c("Foul","InPlay","StrikeSwinging","FoulTip")))),
barrel_rate = sum(ExitSpeed >= 65 & PitchCall == "InPlay", na.rm = T) / sum(PitchCall == "InPlay", na.rm = T),
avg_exit_velo = mean(ExitSpeed[PitchCall == "InPlay"],na.rm = T))
View(batted_ball_stats)
batter_stats <- atbat_results %>%
group_by(Batter) %>%
summarise(PA = n(),
AB = PA - sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
H = sum(result %in% c("Single","Double","Triple","HomeRun"), na.rm  = T),
HR = sum(result == "HomeRun",na.rm=T),
BB = sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
OBP = (H + BB) / PA,
BA = sum(result %in% c("Single","Double","Triple","HomeRun")) / AB,
SLG = sum(bases) / PA,
OPS = OBP + SLG,
K = sum(korbb == "Strikeout", na.rm = T),
RC = (sum(bases) * (H + BB)) / (PA),
RC_per_PA = RC / PA) %>%
ungroup() %>%
merge(batted_ball_stats) %>%
mutate(barrel_rate = ifelse(is.nan(barrel_rate),0,barrel_rate)) %>%
select(Batter, BA, OBP, SLG, OPS, RC, RC_per_PA, chase_rate, contact_rate, barrel_rate, avg_exit_velo, PA, AB, H, HR, K, BB) %>%
replace_na(0)
batter_stats <- atbat_results %>%
group_by(Batter) %>%
summarise(PA = n(),
AB = PA - sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
H = sum(result %in% c("Single","Double","Triple","HomeRun"), na.rm  = T),
HR = sum(result == "HomeRun",na.rm=T),
BB = sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
OBP = (H + BB) / PA,
BA = sum(result %in% c("Single","Double","Triple","HomeRun")) / AB,
SLG = sum(bases) / PA,
OPS = OBP + SLG,
K = sum(korbb == "Strikeout", na.rm = T),
RC = (sum(bases) * (H + BB)) / (PA),
RC_per_PA = RC / PA) %>%
ungroup() %>%
merge(batted_ball_stats) %>%
mutate(barrel_rate = ifelse(is.nan(barrel_rate),0,barrel_rate)) %>%
select(Batter, BA, OBP, SLG, OPS, RC, RC_per_PA, chase_rate, contact_rate, barrel_rate, avg_exit_velo, PA, AB, H, HR, K, BB) %>%
replace_na(everything(), 0)
batter_stats <- atbat_results %>%
group_by(Batter) %>%
summarise(PA = n(),
AB = PA - sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
H = sum(result %in% c("Single","Double","Triple","HomeRun"), na.rm  = T),
HR = sum(result == "HomeRun",na.rm=T),
BB = sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
OBP = (H + BB) / PA,
BA = sum(result %in% c("Single","Double","Triple","HomeRun")) / AB,
SLG = sum(bases) / PA,
OPS = OBP + SLG,
K = sum(korbb == "Strikeout", na.rm = T),
RC = (sum(bases) * (H + BB)) / (PA),
RC_per_PA = RC / PA) %>%
ungroup() %>%
merge(batted_ball_stats) %>%
mutate(barrel_rate = ifelse(is.nan(barrel_rate),0,barrel_rate)) %>%
select(Batter, BA, OBP, SLG, OPS, RC, RC_per_PA, chase_rate, contact_rate, barrel_rate, avg_exit_velo, PA, AB, H, HR, K, BB) %>%
replace(is.na(), 0)
batter_stats <- atbat_results %>%
group_by(Batter) %>%
summarise(PA = n(),
AB = PA - sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
H = sum(result %in% c("Single","Double","Triple","HomeRun"), na.rm  = T),
HR = sum(result == "HomeRun",na.rm=T),
BB = sum(korbb == "Walk" | pitchcall == "HitByPitch", na.rm = T),
OBP = (H + BB) / PA,
BA = sum(result %in% c("Single","Double","Triple","HomeRun")) / AB,
SLG = sum(bases) / PA,
OPS = OBP + SLG,
K = sum(korbb == "Strikeout", na.rm = T),
RC = (sum(bases) * (H + BB)) / (PA),
RC_per_PA = RC / PA) %>%
ungroup() %>%
merge(batted_ball_stats) %>%
mutate(barrel_rate = ifelse(is.nan(barrel_rate),0,barrel_rate)) %>%
select(Batter, BA, OBP, SLG, OPS, RC, RC_per_PA, chase_rate, contact_rate, barrel_rate, avg_exit_velo, PA, AB, H, HR, K, BB) %>%
replace(is.na(.), 0)
